#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Объединение выбранных стандартов в один PDF-файл
//
// Параметры:
//  ДеревоСтандартов - ДеревоЗначений - см. Справочники.СтандартыРазработки.ДеревоСтандартов()
//  РазмерШрифта - Число - в пикселях
// 
// Возвращаемое значение:
//  Строка - HTML-документ, состоящий из выбранных стандартов
//
Функция СобратьHTML(ДеревоСтандартов, РазмерШрифта = Неопределено) Экспорт
	
	Если РазмерШрифта = Неопределено Тогда
		РазмерШрифта = РаботаСHTMLВызовСервера.РазмерШрифтаПоУмолчанию();
	КонецЕсли;
	
	ОсновнойДокумент = ПолучитьМакет("ОсновнойДокумент").ПолучитьТекст();
	ОсновнойДокумент = СтрЗаменить(ОсновнойДокумент, "_FONT_SIZE_", Формат(РазмерШрифта, "ЧГ="));
	ШаблонРазделаНавигации = ПолучитьМакет("РазделНавигации").ПолучитьТекст();
	ШаблонРаздела = ПолучитьМакет("Раздел").ПолучитьТекст();
	
	Если ДеревоСтандартов.Строки.Количество() = 0 Тогда
		Возврат ОсновнойДокумент;
	КонецЕсли;
	
	Корень = ДеревоСтандартов.Строки[0];
	Если Не Корень.Выбран Тогда
		Возврат ОсновнойДокумент;
	КонецЕсли;
	
	НомерРаздела = 1;
	ТелоДокумента = Новый Массив;
	Оглавление = Новый Массив;
	Шаблоны = Новый Структура("Раздел, РазделНавигации", ШаблонРаздела, ШаблонРазделаНавигации);
	
	СобратьРекурсивно(Корень, Шаблоны, Оглавление, ТелоДокумента, НомерРаздела);
	
	ОсновнойДокумент = СтрЗаменить(ОсновнойДокумент, "_NAVIGATION_", СтрСоединить(Оглавление, " "));
	ОсновнойДокумент = СтрЗаменить(ОсновнойДокумент, "_MAIN_BODY_",  СтрСоединить(ТелоДокумента, " "));
	
	Возврат ОсновнойДокумент;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СобратьРекурсивно(Дерево, Шаблоны, Оглавление, ТелоДокумента, НомерРаздела)
	
	Оглавление.Добавить("<ul>");
	
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		
		Если Не СтрокаДерева.Выбран Тогда
			Продолжить;
		КонецЕсли;
		
		РазделНавигации =
			СтрШаблон(Шаблоны.РазделНавигации,
				Формат(НомерРаздела, "ЧГ="),
				РаботаСHTMLКлиентСервер.ЭкранироватьHTML(СтрокаДерева.Наименование));
		Оглавление.Добавить(РазделНавигации);
		
		Если ЗначениеЗаполнено(СтрокаДерева.КодСтандарта) Тогда
			
			ТелоРаздела = СтрокаДерева.СодержаниеСтандартаHTML;
			ОчиститьСодержанияРаздела(ТелоРаздела);
			
			СодержаниеРаздела = СтрШаблон(Шаблоны.Раздел,
				Формат(НомерРаздела, "ЧГ="),
				РаботаСHTMLКлиентСервер.ЭкранироватьHTML(СтрокаДерева.Наименование),
				ТелоРаздела,
				СтрокаДерева.СсылкаНаСтандарт);
			
			ТелоДокумента.Добавить(СодержаниеРаздела);
			
		КонецЕсли;
		
		НомерРаздела = НомерРаздела + 1;
		СобратьРекурсивно(СтрокаДерева, Шаблоны, Оглавление, ТелоДокумента, НомерРаздела);
		
	КонецЦикла;
	
	Оглавление.Добавить("</ul>");
	
КонецПроцедуры

Процедура ОчиститьСодержанияРаздела(СодержаниеРаздела)
	
	СодержаниеРазделаНРег = НРег(СодержаниеРаздела);
	
	НачалоТела = СтрНайти(СодержаниеРазделаНРег, "<body>") + 6; // После тега <BODY>
	КонецТела = СтрНайти(СодержаниеРазделаНРег, "</body>");
	ПервыйDIV = СтрНайти(СодержаниеРазделаНРег, "<div", , НачалоТела);
	
	СодержаниеРаздела = Сред(СодержаниеРаздела, ПервыйDIV, КонецТела - ПервыйDIV);
	
КонецПроцедуры

#КонецОбласти

#Иначе
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли