#Область ПрограммныйИнтерфейс

// Подсветка текста цветом в переданном HTML
//
// Параметры:
//  СтрокаHTML - Строка
//  ВыделяемыйТекст - Строка - текст, который нужно подсветить
//
Процедура ВыделитьТекстВHTML(СтрокаHTML, Знач ВыделяемыйТекст = "") Экспорт
	
	Если Не ЗначениеЗаполнено(ВыделяемыйТекст) Тогда
		ОтключитьВыделениеТекстаВHTML(СтрокаHTML);
		Возврат;
	КонецЕсли;
	
	ПараметрыВыделения = ПараметрыВыделенияТекстаHTML(ВыделяемыйТекст);
	
	ВсеРезультатыПоиска = СтрНайтиВсеПоРегулярномуВыражению(СтрокаHTML, ПараметрыВыделения.ВыражениеПоиска, Истина);
	
	ТолькоТекстовыеРезультаты = Новый Массив;
	Для Каждого РезультатПоиска Из ВсеРезультатыПоиска Цикл
		Если НРег(РезультатПоиска.Значение) = НРег(ВыделяемыйТекст) Тогда
			ТолькоТекстовыеРезультаты.Добавить(РезультатПоиска);
		КонецЕсли;
	КонецЦикла;
	
	Смещение = 0;
	Для Каждого РезультатПоиска Из ТолькоТекстовыеРезультаты Цикл
		СтрокаHTML = 
			Лев(СтрокаHTML, РезультатПоиска.НачальнаяПозиция - 1 + Смещение)
			+ ПараметрыВыделения.НачалоКласса + РезультатПоиска.Значение + ПараметрыВыделения.КонецКласса
			+ Сред(СтрокаHTML, РезультатПоиска.НачальнаяПозиция + РезультатПоиска.Длина + Смещение);
		Смещение = Смещение + ПараметрыВыделения.Смещение;
	КонецЦикла;
	
КонецПроцедуры

// Отключение подсветки текста цветом в переданном HTML
//
// Параметры:
//  СтрокаHTML - Строка
//
Процедура ОтключитьВыделениеТекстаВHTML(СтрокаHTML) Экспорт
	
	ПараметрыВыделения = ПараметрыВыделенияТекстаHTML();
	ДлинаНачалаКласса = СтрДлина(ПараметрыВыделения.НачалоКласса);
	ДлинаКонцаКласса = СтрДлина(ПараметрыВыделения.КонецКласса);
	
	НачалоКлассаВыделения = СтрНайти(СтрокаHTML, ПараметрыВыделения.НачалоКласса);
	Пока НачалоКлассаВыделения > 0 Цикл
		
		КонецКлассаВыделения = СтрНайти(СтрокаHTML, ПараметрыВыделения.КонецКласса, , НачалоКлассаВыделения);
		
		СтрокаHTML = 
			Лев(СтрокаHTML, НачалоКлассаВыделения - 1)
			+ Сред(СтрокаHTML, НачалоКлассаВыделения + ДлинаНачалаКласса, КонецКлассаВыделения - НачалоКлассаВыделения - ДлинаНачалаКласса)
			+ Сред(СтрокаHTML, КонецКлассаВыделения + ДлинаКонцаКласса);
		
		НачалоКлассаВыделения = СтрНайти(СтрокаHTML, ПараметрыВыделения.НачалоКласса);
	КонецЦикла;
	
КонецПроцедуры

// Размер шрифта для HTML по умолчанию
// 
// Возвращаемое значение:
//  Число
//
Функция РазмерШрифтаПоУмолчанию() Экспорт
	
	Возврат Константы.РазмерШрифта.Получить();
	
КонецФункции

Функция МаксимальныйРазмерШрифта() Экспорт
	
	Возврат Метаданные.Константы.РазмерШрифта.Тип.ПривестиЗначение(
		Метаданные.Константы.РазмерШрифта.МаксимальноеЗначение);
	
КонецФункции

Функция МинимальныйРазмерШрифта() Экспорт
	
	Возврат Метаданные.Константы.РазмерШрифта.Тип.ПривестиЗначение(
		Метаданные.Константы.РазмерШрифта.МинимальноеЗначение);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыВыделенияТекстаHTML(Знач ВыделяемыйТекст = "")
	
	ВыделяемыйТекст = РаботаСHTMLКлиентСервер.ЭкранироватьРегулярноеВыражение(ВыделяемыйТекст);
	
	Результат = Новый Структура;
	
	ШаблонПоиска = "(<)(script[^>]*>[^<]*(?:<(?!\/script>)[^<]*)*<\/script>|\/?\b[^<>]+>|!(?:--\s*(?:(?:\[if\s*!IE]>\s*-->)?[^-]*(?:-(?!->)-*[^-]*)*)--|\[CDATA[^\]]*(?:](?!]>)[^\]]*)*]])>)|((?ui:%1))";
	Результат.Вставить("ВыражениеПоиска", СтрШаблон(ШаблонПоиска, ВыделяемыйТекст));
	Результат.Вставить("НачалоКласса", "<span class=""highlight"" style=""background-color: yellow"">");
	Результат.Вставить("КонецКласса", "</span>");
	Результат.Вставить("Смещение", СтрДлина(Результат.НачалоКласса) + СтрДлина(Результат.КонецКласса));
	
	Возврат Результат;
	
КонецФункции



#КонецОбласти