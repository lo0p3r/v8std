#Область ОписаниеПеременных

&НаКлиенте
Перем ПустоеСодержаниеСтандарта; // Для отображения в случае отсутствия стандартов

&НаКлиенте
Перем ШаблонСодержанияГруппыСтандартов; // Для отображения текста группы стандартов

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеСодержимогоСтандарта" Тогда
		СписокПриАктивизацииСтроки(Элементы.Список);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПустоеСодержаниеСтандарта = "<html><head></head><body></body></html>";
	
	ШаблонСодержанияГруппыСтандартов =
	"<html>
	|<head>
	|	<style>H1{FONT-SIZE:18pt;FONT-FAMILY:Arial,Tahoma;FONT-WEIGHT:bold;COLOR:#003366;TEXT-ALIGN:left}
	|		.Programtext{FONT-SIZE:10pt;FONT-FAMILY:Courier New;COLOR:#000080}</style>
	|</head>
	|<body><h1>%1</h1></body>
	|</html>";
	
	СодержаниеСтандартаHTML = ПустоеСодержаниеСтандарта;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбновитьСодержаниеСтандарта", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СодержаниеСтандартаHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ (ДанныеСобытия.Свойство("href") И ЗначениеЗаполнено(ДанныеСобытия.href)) Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаСтандартИТС = РаботаСHTMLКлиентСервер.СсылкаНаИТС(ДанныеСобытия.href);
	
	Если ПереходитьНаСайтИТС = Истина Тогда // открывать на сайте 1С
		
		ЗапуститьПриложениеАсинх(СсылкаНаСтандартИТС);
		
	Иначе // открывать в этой базе
		
		Стандарт = СтандартПоСсылкеИТСНаСервере(СсылкаНаСтандартИТС);
		Если ЗначениеЗаполнено(Стандарт) Тогда
			// чтобы при переключении на элемент, расположенный выше по иерархии (не считая элементов, не групп, в корне),
			// происходила визуализация переключения. 1С не считает это ошибкой.
			Элементы.Список.ТекущаяСтрока = ПредопределенноеЗначение("Справочник.СтандартыРазработки.ПустаяСсылка");
			Элементы.Список.ТекущаяСтрока = Стандарт;
			СписокПриАктивизацииСтроки(Элементы.Список);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	СтрокаГлобальногоПоиска = "";
	
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"СодержаниеСтандартаТекст",
			СтрокаПоиска,
			ВидСравненияКомпоновкиДанных.Содержит);
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(
			Список.Отбор,
			"СодержаниеСтандартаТекст");
		Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
	КонецЕсли;
	
	Если Элементы.Список.ТекущаяСтрока = ТекущаяСтрокаСписка Тогда
		РаботаСHTMLВызовСервера.ВыделитьТекстВHTML(СодержаниеСтандартаHTML, СтрокаПоиска);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	СтрокаГлобальногоПоиска = "";
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(
			Список.Отбор,
			"СодержаниеСтандартаТекст");
	Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
	
	Если Элементы.Список.ТекущаяСтрока = ТекущаяСтрокаСписка Тогда
		РаботаСHTMLВызовСервера.ВыделитьТекстВHTML(СодержаниеСтандартаHTML, СтрокаПоиска);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьPDF(Команда)
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекДанные.КодСтандарта) Тогда
		Возврат;
	КонецЕсли;
	
	АдресВоВХ = ПолучитьPDFНаСервере(ТекДанные.Ссылка);
	
	Если АдресВоВХ <> Неопределено Тогда
		ИмяФайлаPDF = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ТекДанные.Наименование) + ".pdf";
		НачатьПолучениеФайлаССервера(АдресВоВХ, ИмяФайлаPDF);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНаСайтеИТС(Команда)
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗапуститьПриложениеАсинх(ТекДанные.СсылкаНаСтандарт);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьСодержаниеСтандарта()
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		СодержаниеСтандартаHTML = ПустоеСодержаниеСтандарта;
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрокаСписка = Элементы.Список.ТекущаяСтрока;
	
	ДействияСHTMLДоступны = Не ТекДанные.ЭтоГруппа;
	Элементы.ОткрытьPDF.Доступность = ДействияСHTMLДоступны;
	Если Элементы.Найти("РедактироватьСтандартHTML") <> Неопределено Тогда
		Элементы.РедактироватьСтандартHTML.Доступность = ДействияСHTMLДоступны;
	КонецЕсли;
	
	Если ТекДанные.ЭтоГруппа Тогда
		СодержаниеСтандартаHTML = 
			СтрШаблон(ШаблонСодержанияГруппыСтандартов, РаботаСHTMLКлиентСервер.ЭкранироватьHTML(ТекДанные.Наименование));
	Иначе
		СодержаниеСтандартаHTML = ТекДанные.СодержаниеСтандартаHTML;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаГлобальногоПоиска) Тогда
		ВыделяемыйТекст = СтрокаГлобальногоПоиска;
	Иначе
		ВыделяемыйТекст = СтрокаПоиска;
	КонецЕсли;
	РаботаСHTMLВызовСервера.ВыделитьТекстВHTML(СодержаниеСтандартаHTML, ВыделяемыйТекст);
	
КонецПроцедуры

&НаСервере
Функция СтандартПоСсылкеИТСНаСервере(Знач СсылкаНаСтандартИТС)
	
	Возврат Справочники.СтандартыРазработки.СтандартПоСсылкеИТС(СсылкаНаСтандартИТС);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьPDFНаСервере(Знач СсылкаНаСтандарт)
	
	ДвоичныеДанные = Справочники.СтандартыРазработки.СодержимоеСтандартаВPDFДвоичныеДанные(СсылкаНаСтандарт);
	
	Если ТипЗнч(ДвоичныеДанные) <> Тип("ДвоичныеДанные") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
КонецФункции

#КонецОбласти