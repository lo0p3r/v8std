#Область ОписаниеПеременных

&НаКлиенте
Перем editorHTML;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПутьКРедактору = Константы.ПутьКHTMLРедактору.Получить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		// http://localhost/index.html
		Если СтрНайти(ПутьКРедактору, "/index.html") = 0 Тогда
			ВызватьИсключение НСтр("ru='Не указан путь к редактору HTML на веб-сервере'");
		КонецЕсли;
		ОписаниеHTML = ПутьКРедактору;
	#Иначе
		Если ПутьКРедактору = "" Тогда
			ПутьКРедактору = ПолучитьИмяВременногоФайла() + "\sun_editor\";
			ПослеСозданияКаталога = Новый ОписаниеОповещения("ПослеСозданияКаталогаРедактора", ЭтотОбъект);
			НачатьСозданиеКаталога(ПослеСозданияКаталога, ПутьКРедактору);
		Иначе
			ОписаниеHTML = ПутьКРедактору;
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОписаниеHTMLДокументСформирован(Элемент)
	
	Если editorHTML = Неопределено Тогда
		editorHTML = Элементы.ОписаниеHTML.Документ.defaultView.Init();
		Если editorHTML <> Неопределено Тогда
			editorHTML.core.commandHandler(Неопределено, "fullScreen");
			editorHTML.core.focus();
			ПолучитьHTMLИзСтандарта(Параметры.СтандартРазработки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьHTML(Команда)
	
	ТекстHTML = editorHTML.getContents();
	РаботаСHTMLКлиентСервер.ЗаменитьСодержаниеТега(ТекстHTML, "head", ОригинальныйHEAD);
	
	ПоместитьHTMLВСтандартНаСервере(Параметры.СтандартРазработки, ТекстHTML);
	
	ОповеститьОбИзменении(Параметры.СтандартРазработки);
	Оповестить("ИзменениеСодержимогоСтандарта", Параметры.СтандартРазработки, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	ОО = Новый ОписаниеОповещения("ПослеВопросаЗакрытиеФормы", ЭтотОбъект);
	
	ПоказатьВопрос(
		ОО,
		НСтр("ru='Несохраненные изменения будут потеряны. Продолжить?'"),
		РежимДиалогаВопрос.ОКОтмена,
		,
		КодВозвратаДиалога.Отмена,
		НСтр("ru='Закрытие редактора HTML'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаЗакрытиеФормы(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = Неопределено 
		Или Ответ = КодВозвратаДиалога.Таймаут
		Или Ответ = КодВозвратаДиалога.Отмена Тогда
		
		Возврат;
		
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеСозданияКаталогаРедактора(ПутьКРедактору, ДополнительныеПараметры) Экспорт
	
	ОписаниеHTML = УстановитьHTMLEditor(ПутьКРедактору);
	
КонецПроцедуры

&НаКлиенте
Функция УстановитьHTMLEditor(РабочийКаталог)
	
	КаталогКомпоненты = "SunEditorHTML";
	
	РазделительПути = ПолучитьРазделительПутиКлиента();
	Если Не СтрЗаканчиваетсяНа(РабочийКаталог, РазделительПути) Тогда
		РабочийКаталог = РабочийКаталог + РазделительПути;
	КонецЕсли;
	
	ПутьКФайлуРедактора = РабочийКаталог + КаталогКомпоненты + РазделительПути + "index.html";
	
	КаталогНаДиске = Новый Файл(РабочийКаталог + КаталогКомпоненты);
	ФайлРедактораНаДиске = Новый Файл(ПутьКФайлуРедактора);
	
	Если Не КаталогНаДиске.Существует() Или Не ФайлРедактораНаДиске.Существует() Тогда
		
		Макет = ПолучитьИзВременногоХранилища(ПолучитьМакетНаСервере());
		Чтение = Новый ЧтениеДанных(Макет);
		Файл = Новый ЧтениеZipФайла(Чтение.ИсходныйПоток());
		Файл.ИзвлечьВсе(РабочийКаталог + КаталогКомпоненты);
		
	КонецЕсли;
	
	Возврат ПутьКФайлуРедактора;
	
КонецФункции

&НаСервере
Функция ПолучитьМакетНаСервере()
	
	ДвоичныеДанные = ПолучитьОбщийМакет("SunEditorHTML");
	Возврат ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеКоллекцииБезВложенности(Знач Коллекция, ИмяСвойства, ЗначениеПоУмолчанию = Неопределено) экспорт
	
	ТипКоллекции = ТипЗнч(Коллекция);
	
	Если (ТипКоллекции = Тип("Структура") Или ТипКоллекции = Тип("ФиксированнаяСтруктура") Или ТипКоллекции = Тип("ДанныеФормыЭлементДерева")) 
		И Не ПустаяСтрока(ИмяСвойства) Тогда
		
		Попытка
			Если Коллекция.Свойство(ИмяСвойства) И (ЗначениеЗаполнено(Коллекция[ИмяСвойства]) Или ЗначениеПоУмолчанию = Неопределено) Тогда
				Возврат Коллекция[ИмяСвойства];
			КонецЕсли;
		Исключение
			Возврат ЗначениеПоУмолчанию;
		КонецПопытки;
		
	ИначеЕсли ТипКоллекции = Тип("ВнешнийОбъект") Тогда
		
		Попытка
			Возврат Коллекция[ИмяСвойства];
		Исключение
			Возврат ЗначениеПоУмолчанию; 
		КонецПопытки;
		
	ИначеЕсли ТипКоллекции = Тип("Соответствие") И (ЗначениеЗаполнено(Коллекция.Получить(ИмяСвойства)) Или ЗначениеПоУмолчанию = Неопределено) Тогда
		
		Возврат Коллекция.Получить(ИмяСвойства);
		
	Иначе
		
		Возврат ЗначениеПоУмолчанию;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПолучитьКоллекциюПоСвойству(Коллекция, Знач ИмяСвойства, ЗначениеПоУмолчанию = Неопределено) экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Коллекция",		Коллекция);
	Результат.Вставить("ИмяСвойства",	ИмяСвойства);
	
	Если НЕ ТипЗнч(ИмяСвойства)=Тип("Строка") Тогда
		Возврат Результат;
	КонецЕсли;
	
	МассивСвойств = СтрРазделить(ИмяСвойства, ".");
	
	Если МассивСвойств.Количество()=1 Тогда
		Возврат Результат;
	КонецЕсли;
	
	Для Ном = 0 По МассивСвойств.Количество() - 2 Цикл
		Результат.Вставить("Коллекция",
			ПолучитьЗначениеКоллекцииБезВложенности(Результат.Коллекция, СокрЛП(МассивСвойств[Ном]), ЗначениеПоУмолчанию));
	КонецЦикла;
	
	Результат.Вставить("ИмяСвойства", СокрЛП(МассивСвойств[Ном]));
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеКоллекции(Знач Коллекция, Знач ИмяСвойства, ЗначениеПоУмолчанию=Неопределено, МягкийРежим=Истина) экспорт
	
	ТипКоллекции = ТипЗнч(Коллекция);
	
	Если ТипКоллекции = Тип("Число") Или ТипКоллекции = Тип("Строка")
		Или ТипКоллекции = Тип("Булево") Или ТипКоллекции = Тип("Дата") Тогда
		
		Если МягкийРежим И ЗначениеЗаполнено(Коллекция) Тогда
			Возврат Коллекция;
		Иначе
			Возврат ЗначениеПоУмолчанию;
		КонецЕсли;
		
	КонецЕсли;
	
	Результат = ПолучитьКоллекциюПоСвойству(Коллекция, ИмяСвойства, ЗначениеПоУмолчанию);
	
	Возврат ПолучитьЗначениеКоллекцииБезВложенности(Результат.Коллекция, Результат.ИмяСвойства, ЗначениеПоУмолчанию);
	
КонецФункции

&НаКлиенте
Процедура ПолучитьHTMLИзСтандарта(Знач СтандартРазработки)
	
	ТекстHTML = ПолучитьHTMLИзСтандартаНаСервере(СтандартРазработки);
	
	// HEAD оригинального файла нужно вырезать, т.к. он не будет корректно загружен
	РаботаСHTMLКлиентСервер.ВырезатьСодержимоеТега(ТекстHTML, "head", ОригинальныйHEAD);
	
	editorHTML.setContents(ТекстHTML);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьHTMLИзСтандартаНаСервере(Знач СтандартРазработки)
	
	Возврат Справочники.СтандартыРазработки.СодержаниеСтандартаHTML(СтандартРазработки);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ПоместитьHTMLВСтандартНаСервере(Знач СтандартРазработки, Знач СодержаниеСтандартаХТМЛ)
	
	СтандартОбъект = СтандартРазработки.ПолучитьОбъект();
	СтандартОбъект.УстановитьСодержаниеСтандарта(СодержаниеСтандартаХТМЛ);
	СтандартОбъект.Записать();
	
КонецПроцедуры

#КонецОбласти
